/**
 * @fileoverview gRPC-Web generated client stub for wallet
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: wallet.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.wallet = require('./wallet_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.wallet.WalletServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.wallet.WalletServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.CreateWalletRequest,
 *   !proto.wallet.RPCResponse>}
 */
const methodDescriptor_WalletService_CreateWallet = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/CreateWallet',
  grpc.web.MethodType.UNARY,
  proto.wallet.CreateWalletRequest,
  proto.wallet.RPCResponse,
  /**
   * @param {!proto.wallet.CreateWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.RPCResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.RPCResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.RPCResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.createWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateWallet,
      callback);
};


/**
 * @param {!proto.wallet.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.RPCResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.createWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_WalletService_CreateWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.GetWalletsRequest,
 *   !proto.wallet.GetWalletsResponse>}
 */
const methodDescriptor_WalletService_GetWallets = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/GetWallets',
  grpc.web.MethodType.UNARY,
  proto.wallet.GetWalletsRequest,
  proto.wallet.GetWalletsResponse,
  /**
   * @param {!proto.wallet.GetWalletsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.GetWalletsResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.GetWalletsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.GetWalletsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.GetWalletsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.getWallets =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/GetWallets',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWallets,
      callback);
};


/**
 * @param {!proto.wallet.GetWalletsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.GetWalletsResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.getWallets =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/GetWallets',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWallets);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.GetWalletByParamRequest,
 *   !proto.wallet.GetWalletResponse>}
 */
const methodDescriptor_WalletService_GetWalletByParam = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/GetWalletByParam',
  grpc.web.MethodType.UNARY,
  proto.wallet.GetWalletByParamRequest,
  proto.wallet.GetWalletResponse,
  /**
   * @param {!proto.wallet.GetWalletByParamRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.GetWalletResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.GetWalletByParamRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.GetWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.GetWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.getWalletByParam =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/GetWalletByParam',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletByParam,
      callback);
};


/**
 * @param {!proto.wallet.GetWalletByParamRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.GetWalletResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.getWalletByParam =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/GetWalletByParam',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletByParam);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.GetWalletByTokenRequest,
 *   !proto.wallet.GetWalletResponse>}
 */
const methodDescriptor_WalletService_GetWalletByToken = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/GetWalletByToken',
  grpc.web.MethodType.UNARY,
  proto.wallet.GetWalletByTokenRequest,
  proto.wallet.GetWalletResponse,
  /**
   * @param {!proto.wallet.GetWalletByTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.GetWalletResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.GetWalletByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.GetWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.GetWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.getWalletByToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/GetWalletByToken',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletByToken,
      callback);
};


/**
 * @param {!proto.wallet.GetWalletByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.GetWalletResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.getWalletByToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/GetWalletByToken',
      request,
      metadata || {},
      methodDescriptor_WalletService_GetWalletByToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.UpdateWalletAmmountRequest,
 *   !proto.wallet.RPCResponse>}
 */
const methodDescriptor_WalletService_UpdateWalletAmmount = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/UpdateWalletAmmount',
  grpc.web.MethodType.UNARY,
  proto.wallet.UpdateWalletAmmountRequest,
  proto.wallet.RPCResponse,
  /**
   * @param {!proto.wallet.UpdateWalletAmmountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.RPCResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.UpdateWalletAmmountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.RPCResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.RPCResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.updateWalletAmmount =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/UpdateWalletAmmount',
      request,
      metadata || {},
      methodDescriptor_WalletService_UpdateWalletAmmount,
      callback);
};


/**
 * @param {!proto.wallet.UpdateWalletAmmountRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.RPCResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.updateWalletAmmount =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/UpdateWalletAmmount',
      request,
      metadata || {},
      methodDescriptor_WalletService_UpdateWalletAmmount);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.UpdateWalletStatusRequest,
 *   !proto.wallet.RPCResponse>}
 */
const methodDescriptor_WalletService_UpdateWalletStatus = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/UpdateWalletStatus',
  grpc.web.MethodType.UNARY,
  proto.wallet.UpdateWalletStatusRequest,
  proto.wallet.RPCResponse,
  /**
   * @param {!proto.wallet.UpdateWalletStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.RPCResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.UpdateWalletStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.RPCResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.RPCResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.updateWalletStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/UpdateWalletStatus',
      request,
      metadata || {},
      methodDescriptor_WalletService_UpdateWalletStatus,
      callback);
};


/**
 * @param {!proto.wallet.UpdateWalletStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.RPCResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.updateWalletStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/UpdateWalletStatus',
      request,
      metadata || {},
      methodDescriptor_WalletService_UpdateWalletStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet.DeleteWalletRequest,
 *   !proto.wallet.RPCResponse>}
 */
const methodDescriptor_WalletService_DeleteWallet = new grpc.web.MethodDescriptor(
  '/wallet.WalletService/DeleteWallet',
  grpc.web.MethodType.UNARY,
  proto.wallet.DeleteWalletRequest,
  proto.wallet.RPCResponse,
  /**
   * @param {!proto.wallet.DeleteWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet.RPCResponse.deserializeBinary
);


/**
 * @param {!proto.wallet.DeleteWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet.RPCResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet.RPCResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet.WalletServiceClient.prototype.deleteWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet.WalletService/DeleteWallet',
      request,
      metadata || {},
      methodDescriptor_WalletService_DeleteWallet,
      callback);
};


/**
 * @param {!proto.wallet.DeleteWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet.RPCResponse>}
 *     Promise that resolves to the response
 */
proto.wallet.WalletServicePromiseClient.prototype.deleteWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet.WalletService/DeleteWallet',
      request,
      metadata || {},
      methodDescriptor_WalletService_DeleteWallet);
};


module.exports = proto.wallet;

